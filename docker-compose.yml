
# Docker Compose para ambiente de desenvolvimento
# Banco de dados separado e servi√ßos bem organizados

version: '3.8'

services:
  # Frontend React
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: meter-frontend
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:3001/api
    depends_on:
      - backend
    networks:
      - meter-network

  # Backend (preparado para quando criar)
  backend:
    image: node:18-alpine
    container_name: meter-backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=meter_system
      - DB_USER=root
      - DB_PASSWORD=password123
      - JWT_SECRET=seu_jwt_secret_muito_seguro_aqui
      - PORT=3001
    depends_on:
      database:
        condition: service_healthy
    networks:
      - meter-network

  # Banco MySQL separado
  database:
    image: mysql:8.0
    container_name: meter-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password123
      MYSQL_DATABASE: meter_system
      MYSQL_USER: meter_user
      MYSQL_PASSWORD: meter_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./deployment/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
      interval: 10s
    networks:
      - meter-network
    restart: unless-stopped

  # phpMyAdmin para gerenciar o banco (opcional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: meter-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password123
    depends_on:
      - database
    networks:
      - meter-network

volumes:
  mysql_data:
    driver: local

networks:
  meter-network:
    driver: bridge
